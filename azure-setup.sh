#!/bin/bash
set -e

# Azure Configuration
SUBSCRIPTION_ID="c0413a08-7530-4df9-af33-5558f1bed318"
TENANT_ID="9d9dca76-a23a-44f1-bb13-22aa4a2f048c"
RESOURCE_PREFIX="certtracker"
LOCATION="westus2"  # California region
RESOURCE_GROUP="${RESOURCE_PREFIX}-rg"

echo "🚀 Setting up Azure resources for Certification Tracker..."
echo "Subscription: $SUBSCRIPTION_ID"
echo "Tenant: $TENANT_ID"
echo "Region: $LOCATION"
echo "Resource Group: $RESOURCE_GROUP"

# Login and set subscription
echo "📝 Setting Azure subscription..."
az account set --subscription "$SUBSCRIPTION_ID"

# Create Resource Group
echo "📂 Creating resource group..."
az group create \
  --name "$RESOURCE_GROUP" \
  --location "$LOCATION" \
  --tags "project=cert-tracker" "environment=dev"

# Create Cosmos DB Account (Free Tier)
echo "🗄️ Creating Cosmos DB account (this may take 5-10 minutes)..."
COSMOS_ACCOUNT="${RESOURCE_PREFIX}-cosmos"
az cosmosdb create \
  --name "$COSMOS_ACCOUNT" \
  --resource-group "$RESOURCE_GROUP" \
  --location "$LOCATION" \
  --kind "GlobalDocumentDB" \
  --default-consistency-level "Session" \
  --enable-free-tier true \
  --backup-policy-type Periodic

# Create Cosmos DB database and container
echo "📊 Creating Cosmos DB database and container..."
az cosmosdb sql database create \
  --account-name "$COSMOS_ACCOUNT" \
  --resource-group "$RESOURCE_GROUP" \
  --name "app"

az cosmosdb sql container create \
  --account-name "$COSMOS_ACCOUNT" \
  --resource-group "$RESOURCE_GROUP" \
  --database-name "app" \
  --name "entities" \
  --partition-key-path "/districtId" \
  --throughput 1000

# Create Storage Account
echo "💾 Creating storage account..."
STORAGE_ACCOUNT="${RESOURCE_PREFIX}storage$(date +%s | tail -c 6)"  # Add random suffix
az storage account create \
  --name "$STORAGE_ACCOUNT" \
  --resource-group "$RESOURCE_GROUP" \
  --location "$LOCATION" \
  --sku "Standard_LRS" \
  --kind "StorageV2" \
  --access-tier "Hot"

# Create blob container (private)
echo "📁 Creating blob container..."
az storage container create \
  --name "certs" \
  --account-name "$STORAGE_ACCOUNT" \
  --auth-mode login \
  --public-access off

# Create Azure AD App Registration
echo "🔐 Creating Azure AD App Registration..."
APP_NAME="${RESOURCE_PREFIX}-app"
APP_JSON=$(az ad app create \
  --display-name "$APP_NAME" \
  --web-redirect-uris "https://${RESOURCE_PREFIX}-swa.azurestaticapps.net/.auth/login/aad/callback" \
  --web-home-page-url "https://${RESOURCE_PREFIX}-swa.azurestaticapps.net" \
  --query '{appId: appId, id: id}' \
  --output json)

APP_ID=$(echo $APP_JSON | jq -r '.appId')
OBJECT_ID=$(echo $APP_JSON | jq -r '.id')

# Create client secret
echo "🔑 Creating client secret..."
SECRET_JSON=$(az ad app credential reset \
  --id "$APP_ID" \
  --append \
  --credential-description "SWA-Auth-Secret" \
  --query '{clientSecret: password}' \
  --output json)

CLIENT_SECRET=$(echo $SECRET_JSON | jq -r '.clientSecret')

# Create Static Web App
echo "🌐 Creating Static Web App..."
SWA_NAME="${RESOURCE_PREFIX}-swa"
az staticwebapp create \
  --name "$SWA_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --location "$LOCATION" \
  --source "https://github.com/your-github-username/cert-tracker" \
  --branch "main" \
  --app-location "/" \
  --output-location "out" \
  --api-location "api"

# Create Communication Services (for future email functionality)
echo "📧 Creating Communication Services..."
COMM_SERVICE="${RESOURCE_PREFIX}-comm"
az communication create \
  --name "$COMM_SERVICE" \
  --resource-group "$RESOURCE_GROUP" \
  --location "Global" \
  --data-location "United States"

# Get connection strings and keys
echo "🔍 Retrieving connection strings and keys..."

COSMOS_ENDPOINT=$(az cosmosdb show \
  --name "$COSMOS_ACCOUNT" \
  --resource-group "$RESOURCE_GROUP" \
  --query "documentEndpoint" \
  --output tsv)

COSMOS_KEY=$(az cosmosdb keys list \
  --name "$COSMOS_ACCOUNT" \
  --resource-group "$RESOURCE_GROUP" \
  --type keys \
  --query "primaryMasterKey" \
  --output tsv)

STORAGE_KEY=$(az storage account keys list \
  --account-name "$STORAGE_ACCOUNT" \
  --resource-group "$RESOURCE_GROUP" \
  --query "[0].value" \
  --output tsv)

SWA_API_KEY=$(az staticwebapp secrets list \
  --name "$SWA_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --query "properties.apiKey" \
  --output tsv)

# Generate environment files
echo "📝 Creating environment configuration files..."

cat > .env.local << EOF
# Generated by azure-setup.sh on $(date)

# Azure Cosmos DB
COSMOS_ENDPOINT=$COSMOS_ENDPOINT
COSMOS_KEY=$COSMOS_KEY

# Azure Storage
AZURE_STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT
AZURE_STORAGE_ACCOUNT_KEY=$STORAGE_KEY

# Azure AD (for SWA configuration)
AZURE_CLIENT_ID=$APP_ID
AZURE_CLIENT_SECRET=$CLIENT_SECRET
AZURE_TENANT_ID=$TENANT_ID
EOF

cat > api/local.settings.json << EOF
{
  "IsEncrypted": false,
  "Values": {
    "AzureWebJobsStorage": "",
    "FUNCTIONS_WORKER_RUNTIME": "node",
    "COSMOS_ENDPOINT": "$COSMOS_ENDPOINT",
    "COSMOS_KEY": "$COSMOS_KEY",
    "AZURE_STORAGE_ACCOUNT_NAME": "$STORAGE_ACCOUNT",
    "AZURE_STORAGE_ACCOUNT_KEY": "$STORAGE_KEY"
  },
  "Host": {
    "CORS": "*"
  }
}
EOF

echo ""
echo "✅ Azure setup complete!"
echo ""
echo "📋 Resource Summary:"
echo "  • Resource Group: $RESOURCE_GROUP"
echo "  • Cosmos DB: $COSMOS_ACCOUNT"
echo "  • Storage Account: $STORAGE_ACCOUNT"
echo "  • Static Web App: $SWA_NAME"
echo "  • Azure AD App: $APP_NAME ($APP_ID)"
echo ""
echo "🔧 Next Steps:"
echo "1. Configure Static Web App authentication:"
echo "   az staticwebapp appsettings set --name '$SWA_NAME' --setting-names AZURE_CLIENT_ID='$APP_ID' AZURE_CLIENT_SECRET='$CLIENT_SECRET'"
echo ""
echo "2. Your environment files have been created:"
echo "   • .env.local (for Next.js)"
echo "   • api/local.settings.json (for Azure Functions)"
echo ""
echo "3. Deploy to Static Web App:"
echo "   • Push your code to GitHub"
echo "   • Connect the SWA to your repository"
echo "   • Or use: az staticwebapp environment set --name '$SWA_NAME'"
echo ""
echo "💰 Estimated Monthly Cost: ~$0 (using free tiers)"
echo ""
echo "🔗 Resource URLs:"
echo "  • Static Web App: https://$SWA_NAME.azurestaticapps.net"
echo "  • Cosmos DB: $COSMOS_ENDPOINT"
echo "  • Storage Account: https://$STORAGE_ACCOUNT.blob.core.windows.net"
EOF